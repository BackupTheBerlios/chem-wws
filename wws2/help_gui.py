#!/usr/bin/env python
# -*- coding: UTF-8 -*-
# generated by wxGlade 0.4.1cvs on Sat Aug 26 20:41:50 2006

import wx
from wx.html import HtmlWindow
# Eigene Importe
import Config

class helpFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        self.page = Config.Help_Server + kwds['page']
        del(kwds['page'])
        # begin wxGlade: helpFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.frame_1_statusbar = self.CreateStatusBar(2, 0)
        
        # Tool Bar
        self.frame_1_toolbar = wx.ToolBar(self, -1)
        self.SetToolBar(self.frame_1_toolbar)
        self.frame_1_toolbar.AddLabelTool(101, u"Schließen", wx.Bitmap("icon/exit.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, u"Schließt die Hilfe", u"Fenster schließen")
        self.frame_1_toolbar.AddSeparator()
        self.frame_1_toolbar.AddLabelTool(102, "helpBack", wx.Bitmap("icon/back.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, u"Zurück", u"Eine Seite zurück blättern")
        self.frame_1_toolbar.AddLabelTool(103, "helpForward", wx.Bitmap("icon/forward.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, u"Vorwärts", u"Eine Seite vorwärts blättern")
        self.frame_1_toolbar.AddLabelTool(104, "helpHome", wx.Bitmap("icon/home.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Startseite", u"Zurück zur Startseite")
        self.frame_1_toolbar.AddSeparator()
        # Tool Bar end
        self.window_1 = HtmlWindow(self, -1)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TOOL, self.helpClose, id=101)
        self.Bind(wx.EVT_TOOL, self.helpBack, id=102)
        self.Bind(wx.EVT_TOOL, self.helpForward, id=103)
        self.Bind(wx.EVT_TOOL, self.helpHome, id=104)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: helpFrame.__set_properties
        self.SetTitle("Hilfe")
        self.SetSize((600, 450))
        self.SetFocus()
        self.frame_1_statusbar.SetStatusWidths([-1, 265])
        # statusbar fields
        frame_1_statusbar_fields = ["", "Copyright 2006 by Thorsten Weimann"]
        for i in range(len(frame_1_statusbar_fields)):
            self.frame_1_statusbar.SetStatusText(frame_1_statusbar_fields[i], i)
        self.frame_1_toolbar.Realize()
        # end wxGlade
        self.window_1.LoadPage(self.page)
        self.window_1.SetRelatedFrame(self, 'wws Hilfe - %s')
        self.window_1.SetRelatedStatusBar(0)

    def __do_layout(self):
        # begin wxGlade: helpFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_1.Add(self.window_1, 1, wx.EXPAND, 0)
        self.SetAutoLayout(True)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def helpClose(self, event): # wxGlade: helpFrame.<event_handler>
        self.Destroy()

    def helpBack(self, event): # wxGlade: helpFrame.<event_handler>
        if self.window_1.HistoryCanBack():
            self.window_1.HistoryBack()

    def helpForward(self, event): # wxGlade: helpFrame.<event_handler>
        if self.window_1.HistoryCanForward():
            self.window_1.HistoryForward()

    def helpHome(self, event): # wxGlade: helpFrame.<event_handler>
        self.window_1.HistoryClear()
        self.window_1.LoadPage(self.page)

# end of class helpFrame


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = helpFrame(None, -1, "", page = 'http://www.google.de')
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
