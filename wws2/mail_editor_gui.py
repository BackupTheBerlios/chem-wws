#!/usr/bin/env python
# -*- coding: UTF-8 -*-
# generated by wxGlade 0.4.1cvs on Wed Aug  9 12:47:08 2006

import wx
from wx.html import HtmlWindow

class MailEditor(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MailEditor.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.frame_1_menubar = wx.MenuBar()
        self.SetMenuBar(self.frame_1_menubar)
        self.file = wx.Menu()
        self.ed_close = wx.MenuItem(self.file, 101, u"Schließen", u"Schließt das Editorfenster", wx.ITEM_NORMAL)
        self.file.AppendItem(self.ed_close)
        self.frame_1_menubar.Append(self.file, "Datei")
        self.ed_mail = wx.Menu()
        self.ed_send = wx.MenuItem(self.ed_mail, 301, "Senden", "Nachricht verschicken", wx.ITEM_NORMAL)
        self.ed_mail.AppendItem(self.ed_send)
        self.frame_1_menubar.Append(self.ed_mail, "Nachricht")
        self.ed_help = wx.Menu()
        self.ed_help_show = wx.MenuItem(self.ed_help, 201, "Hilfe", "Hilfedatei anzeigen", wx.ITEM_NORMAL)
        self.ed_help.AppendItem(self.ed_help_show)
        self.frame_1_menubar.Append(self.ed_help, "Hilfe")
        # Menu Bar end
        self.frame_1_statusbar = self.CreateStatusBar(1, 0)
        
        # Tool Bar
        self.frame_1_toolbar = wx.ToolBar(self, -1)
        self.SetToolBar(self.frame_1_toolbar)
        self.frame_1_toolbar.AddLabelTool(50, u"Schließen", wx.Bitmap("/home/tweimann/workspace/wws/icon/exit.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, u"Fenster schließen", u"Schließt das Editorfenster")
        self.frame_1_toolbar.AddSeparator()
        self.frame_1_toolbar.AddLabelTool(51, "Senden", wx.Bitmap("/home/tweimann/workspace/wws/icon/mail_send.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Nachricht versenden", "Nachricht versenden")
        self.frame_1_toolbar.AddSeparator()
        self.frame_1_toolbar.AddLabelTool(52, u"Linksbündig", wx.Bitmap("/home/tweimann/workspace/wws/icon/ed_left.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, u"Linksbündig", u"Richtet den markierten Text linksbündig aus")
        self.frame_1_toolbar.AddLabelTool(53, "Zentrieren", wx.Bitmap("/home/tweimann/workspace/wws/icon/ed_center.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Zentrieren", "Zentriert den markierten Text")
        self.frame_1_toolbar.AddLabelTool(54, "Fett", wx.Bitmap("/home/tweimann/workspace/wws/icon/ed_bold.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Fett", "Markierter Text wird fett dargestellt")
        self.frame_1_toolbar.AddLabelTool(55, "Kursiv", wx.Bitmap("/home/tweimann/workspace/wws/icon/ed_italic.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Kursiv", "Markierter Text wird kursiv dargestellt")
        self.frame_1_toolbar.AddLabelTool(56, "Unterstrichen", wx.Bitmap("/home/tweimann/workspace/wws/icon/ed_under.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Unterstrichen", "Markierter Text wird unterstrichen")
        self.frame_1_toolbar.AddLabelTool(57, "Tiefgestellt", wx.Bitmap("/home/tweimann/workspace/wws/icon/ed_sub.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Tiefgestellt", "Markierter Text wird tiefgestellt")
        self.frame_1_toolbar.AddSeparator()
        self.frame_1_toolbar.AddLabelTool(58, "Hilfe", wx.Bitmap("/home/tweimann/workspace/wws/icon/help.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Hilfe anzeigen", "Zeigt die Hilfedatei an")
        # Tool Bar end
        self.label_1 = wx.StaticText(self, -1, "Senden an:")
        self.combo_box_1 = wx.ComboBox(self, -1, choices=[], style=wx.CB_DROPDOWN|wx.CB_READONLY)
        self.label_2 = wx.StaticText(self, -1, "Wichtig:")
        self.checkbox_1 = wx.CheckBox(self, -1, "")
        self.label_3 = wx.StaticText(self, -1, "Betreff:")
        self.text_ctrl_2 = wx.TextCtrl(self, -1, "")
        self.text_ctrl_1 = wx.TextCtrl(self, -1, "", style=wx.TE_MULTILINE)
        self.button_1 = wx.Button(self, -1, "Vorschau")
        self.button_2 = wx.Button(self, -1, "Senden")
        self.window_1 = HtmlWindow(self, -1)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.edClose, self.ed_close)
        self.Bind(wx.EVT_MENU, self.edSend, self.ed_send)
        self.Bind(wx.EVT_MENU, self.edHelp, self.ed_help_show)
        self.Bind(wx.EVT_TOOL, self.edClose, id=50)
        self.Bind(wx.EVT_TOOL, self.edSend, id=51)
        self.Bind(wx.EVT_TOOL, self.textLeft, id=52)
        self.Bind(wx.EVT_TOOL, self.textCenter, id=53)
        self.Bind(wx.EVT_TOOL, self.textBold, id=54)
        self.Bind(wx.EVT_TOOL, self.textItalic, id=55)
        self.Bind(wx.EVT_TOOL, self.textUnderline, id=56)
        self.Bind(wx.EVT_TOOL, self.textSub, id=57)
        self.Bind(wx.EVT_TOOL, self.edHelp, id=58)
        self.Bind(wx.EVT_CHECKBOX, self.edImportant, self.checkbox_1)
        self.Bind(wx.EVT_BUTTON, self.butPreview, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.butSend, self.button_2)
        # end wxGlade
        self.Bind(wx.EVT_CLOSE, self.edClose)

    def __set_properties(self):
        # begin wxGlade: MailEditor.__set_properties
        self.SetTitle("Mail - Editor")
        self.SetSize((450, 565))
        self.frame_1_statusbar.SetStatusWidths([-1])
        # statusbar fields
        frame_1_statusbar_fields = ["Copyright 2006 by Thorsten Weimann"]
        for i in range(len(frame_1_statusbar_fields)):
            self.frame_1_statusbar.SetStatusText(frame_1_statusbar_fields[i], i)
        self.frame_1_toolbar.Realize()
        self.label_1.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.combo_box_1.SetMinSize((200, 23))
        self.combo_box_1.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.label_2.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.checkbox_1.SetToolTipString("Nachricht als wichtig kennzeichnen")
        self.label_3.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.text_ctrl_2.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.text_ctrl_1.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MailEditor.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3.Add(self.label_1, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 5)
        sizer_3.Add(self.combo_box_1, 0, wx.ALL|wx.ADJUST_MINSIZE, 5)
        sizer_3.Add(self.label_2, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 5)
        sizer_3.Add(self.checkbox_1, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 5)
        sizer_1.Add(sizer_3, 0, wx.EXPAND, 0)
        sizer_4.Add(self.label_3, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 5)
        sizer_4.Add(self.text_ctrl_2, 1, wx.ALL|wx.EXPAND|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_1.Add(sizer_4, 0, wx.EXPAND, 1)
        sizer_1.Add(self.text_ctrl_1, 3, wx.ALL|wx.EXPAND, 5)
        sizer_2.Add(self.button_1, 0, wx.ALL|wx.ADJUST_MINSIZE, 5)
        sizer_2.Add((20, 5), 1, wx.EXPAND, 0)
        sizer_2.Add(self.button_2, 0, wx.ALL|wx.ADJUST_MINSIZE, 5)
        sizer_1.Add(sizer_2, 0, wx.EXPAND, 0)
        sizer_1.Add(self.window_1, 3, wx.ALL|wx.EXPAND, 5)
        self.SetAutoLayout(True)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def edClose(self, event): # wxGlade: MailEditor.<event_handler>
        # Abfangen von nicht abgeschickten Nachrichten
        # ...
        self.Destroy()

    def edSend(self, event): # wxGlade: MailEditor.<event_handler>
        print "Event handler `edSend' not implemented!"
        event.Skip()

    def edHelp(self, event): # wxGlade: MailEditor.<event_handler>
        print "Event handler `edHelp' not implemented!"
        event.Skip()

    def textLeft(self, event): # wxGlade: MailEditor.<event_handler>
        print "Event handler `textLeft' not implemented!"
        event.Skip()

    def textCenter(self, event): # wxGlade: MailEditor.<event_handler>
        print "Event handler `textCenter' not implemented!"
        event.Skip()

    def textBold(self, event): # wxGlade: MailEditor.<event_handler>
        print "Event handler `textBold' not implemented!"
        event.Skip()

    def textItalic(self, event): # wxGlade: MailEditor.<event_handler>
        print "Event handler `textItalic' not implemented!"
        event.Skip()

    def textUnderline(self, event): # wxGlade: MailEditor.<event_handler>
        print "Event handler `textUnderline' not implemented!"
        event.Skip()

    def textSub(self, event): # wxGlade: MailEditor.<event_handler>
        print "Event handler `textSub' not implemented!"
        event.Skip()

    def butPreview(self, event): # wxGlade: MailEditor.<event_handler>
        print "Event handler `butPreview' not implemented"
        event.Skip()

    def butSend(self, event): # wxGlade: MailEditor.<event_handler>
        print "Event handler `butSend' not implemented"
        event.Skip()

    def edImportant(self, event): # wxGlade: MailEditor.<event_handler>
        print "Event handler `edImportant' not implemented"
        event.Skip()

# end of class MailEditor


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MailEditor(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
